//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gladiator.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class gladiatorEntities1 : DbContext
    {
        public gladiatorEntities1()
            : base("name=gladiatorEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bidder> Bidders { get; set; }
        public virtual DbSet<CropBuy> CropBuys { get; set; }
        public virtual DbSet<Crop> Crops { get; set; }
        public virtual DbSet<CropSell> CropSells { get; set; }
        public virtual DbSet<CropType> CropTypes { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<Farmer> Farmers { get; set; }
        public virtual DbSet<LiveBid> LiveBids { get; set; }
        public virtual DbSet<OfficialUser> OfficialUsers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
    
        public virtual ObjectResult<AdminLogin_Result> AdminLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminLogin_Result>("AdminLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<bidApproval_Result> bidApproval()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bidApproval_Result>("bidApproval");
        }
    
        public virtual int bidderApproval(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bidderApproval", emailParameter);
        }
    
        public virtual int bidderDecilne(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bidderDecilne", emailParameter);
        }
    
        public virtual int bidderDocApproval(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bidderDocApproval", emailParameter);
        }
    
        public virtual int bidderDocDecline(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bidderDocDecline", emailParameter);
        }
    
        public virtual ObjectResult<bidderHistory_Result> bidderHistory(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bidderHistory_Result>("bidderHistory", emailParameter);
        }
    
        public virtual ObjectResult<BidderLogin_Result> BidderLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BidderLogin_Result>("BidderLogin", usernameParameter, passwordParameter);
        }
    
        public virtual int buyCrop(Nullable<int> bidId, Nullable<int> price)
        {
            var bidIdParameter = bidId.HasValue ?
                new ObjectParameter("bidId", bidId) :
                new ObjectParameter("bidId", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("buyCrop", bidIdParameter, priceParameter);
        }
    
        public virtual ObjectResult<checkBidderRegistered_Result> checkBidderRegistered(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkBidderRegistered_Result>("checkBidderRegistered", emailParameter);
        }
    
        public virtual ObjectResult<checkFarmerRegistered_Result> checkFarmerRegistered(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkFarmerRegistered_Result>("checkFarmerRegistered", emailParameter);
        }
    
        public virtual ObjectResult<cropApproval_Result> cropApproval()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cropApproval_Result>("cropApproval");
        }
    
        public virtual int cropApproved(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cropApproved", idParameter);
        }
    
        public virtual ObjectResult<cropBought_Result> cropBought(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cropBought_Result>("cropBought", emailParameter);
        }
    
        public virtual ObjectResult<cropData_Result> cropData(string ctype)
        {
            var ctypeParameter = ctype != null ?
                new ObjectParameter("ctype", ctype) :
                new ObjectParameter("ctype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cropData_Result>("cropData", ctypeParameter);
        }
    
        public virtual int cropDeclined(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cropDeclined", idParameter);
        }
    
        public virtual ObjectResult<cropPrice_Result> cropPrice(string cName)
        {
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cropPrice_Result>("cropPrice", cNameParameter);
        }
    
        public virtual int cropSold(Nullable<int> cropId)
        {
            var cropIdParameter = cropId.HasValue ?
                new ObjectParameter("cropId", cropId) :
                new ObjectParameter("cropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cropSold", cropIdParameter);
        }
    
        public virtual int farmerApproval(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("farmerApproval", emailParameter);
        }
    
        public virtual int farmerDecline(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("farmerDecline", emailParameter);
        }
    
        public virtual int farmerDocApproval(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("farmerDocApproval", emailParameter);
        }
    
        public virtual int farmerDocDecline(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("farmerDocDecline", emailParameter);
        }
    
        public virtual ObjectResult<FarmerLogin_Result> FarmerLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FarmerLogin_Result>("FarmerLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<farmerMarket_Result> farmerMarket(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<farmerMarket_Result>("farmerMarket", emailParameter);
        }
    
        public virtual ObjectResult<farmerMarketBid_Result> farmerMarketBid(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<farmerMarketBid_Result>("farmerMarketBid", emailParameter);
        }
    
        public virtual ObjectResult<farmerSoldHistory_Result> farmerSoldHistory(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<farmerSoldHistory_Result>("farmerSoldHistory", emailParameter);
        }
    
        public virtual int insertLiveBid(Nullable<int> cropid, Nullable<double> baseprice, Nullable<double> bidprice, string bemail)
        {
            var cropidParameter = cropid.HasValue ?
                new ObjectParameter("cropid", cropid) :
                new ObjectParameter("cropid", typeof(int));
    
            var basepriceParameter = baseprice.HasValue ?
                new ObjectParameter("baseprice", baseprice) :
                new ObjectParameter("baseprice", typeof(double));
    
            var bidpriceParameter = bidprice.HasValue ?
                new ObjectParameter("bidprice", bidprice) :
                new ObjectParameter("bidprice", typeof(double));
    
            var bemailParameter = bemail != null ?
                new ObjectParameter("bemail", bemail) :
                new ObjectParameter("bemail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertLiveBid", cropidParameter, basepriceParameter, bidpriceParameter, bemailParameter);
        }
    
        public virtual ObjectResult<liveCropBid_Result> liveCropBid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<liveCropBid_Result>("liveCropBid");
        }
    
        public virtual ObjectResult<Nullable<double>> marketCropBid(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("marketCropBid", emailParameter);
        }
    
        public virtual ObjectResult<maxBidDisplay_Result> maxBidDisplay()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<maxBidDisplay_Result>("maxBidDisplay");
        }
    
        public virtual ObjectResult<pendingTransaction_Result> pendingTransaction(string email, Nullable<int> cropId)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var cropIdParameter = cropId.HasValue ?
                new ObjectParameter("cropId", cropId) :
                new ObjectParameter("cropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pendingTransaction_Result>("pendingTransaction", emailParameter, cropIdParameter);
        }
    
        public virtual ObjectResult<seeSellCrop_Result> seeSellCrop(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<seeSellCrop_Result>("seeSellCrop", emailParameter);
        }
    
        public virtual int setStatusCrop(Nullable<int> cropId)
        {
            var cropIdParameter = cropId.HasValue ?
                new ObjectParameter("cropId", cropId) :
                new ObjectParameter("cropId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setStatusCrop", cropIdParameter);
        }
    
        public virtual ObjectResult<sold_Result> sold(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sold_Result>("sold", emailParameter);
        }
    
        public virtual int soldBid(Nullable<int> bidId)
        {
            var bidIdParameter = bidId.HasValue ?
                new ObjectParameter("bidId", bidId) :
                new ObjectParameter("bidId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("soldBid", bidIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int trans(Nullable<int> bidId)
        {
            var bidIdParameter = bidId.HasValue ?
                new ObjectParameter("bidId", bidId) :
                new ObjectParameter("bidId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trans", bidIdParameter);
        }
    
        public virtual ObjectResult<transacDetails_Result> transacDetails(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<transacDetails_Result>("transacDetails", emailParameter);
        }
    
        public virtual ObjectResult<viewBidder_Result> viewBidder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewBidder_Result>("viewBidder");
        }
    
        public virtual ObjectResult<viewBidderApproval_Result> viewBidderApproval()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewBidderApproval_Result>("viewBidderApproval");
        }
    
        public virtual ObjectResult<viewFarmer_Result> viewFarmer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewFarmer_Result>("viewFarmer");
        }
    
        public virtual ObjectResult<viewFarmerApproval_Result> viewFarmerApproval()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewFarmerApproval_Result>("viewFarmerApproval");
        }
    
        public virtual ObjectResult<viewCropDeclined_Result> viewCropDeclined(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<viewCropDeclined_Result>("viewCropDeclined", emailParameter);
        }
    }
}
